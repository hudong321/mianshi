{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_van_field = _resolveComponent(\"van-field\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[1] || (_cache[1] = _createElementVNode(\"div\", null, \"home\", -1 /* HOISTED */)), _createCommentVNode(\" <van-cell title=\\\"选择单个日期\\\" :value=\\\"date\\\" @click=\\\"show = true\\\" />\\r\\n   <van-calendar v-if=\\\"show\\\"  @confirm=\\\"onConfirm\\\" /> \"), _createVNode(_component_van_field, {\n    type: \"password\",\n    style: {\n      \"padding\": \"0\",\n      \"width\": \"100%\"\n    },\n    label: \"密码\",\n    modelValue: _ctx.pwd,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.pwd = $event),\n    placeholder: \"请输入\",\n    \"input-align\": \"right\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createElementVNode","_createCommentVNode","_createVNode","_component_van_field","type","style","label","modelValue","_ctx","pwd","_cache","$event","placeholder"],"sources":["G:\\Workspace\\CoderWorkspace\\antd-demo\\src\\components\\HomePage.vue"],"sourcesContent":["<template>\r\n    <div>home</div>\r\n   <!-- <van-cell title=\"选择单个日期\" :value=\"date\" @click=\"show = true\" />\r\n   <van-calendar v-if=\"show\"  @confirm=\"onConfirm\" /> -->\r\n   <van-field\r\n          type=\"password\"\r\n          style=\"padding: 0; width: 100%\"\r\n          label=\"密码\"\r\n          v-model=\"pwd\"\r\n          placeholder=\"请输入\"\r\n          input-align=\"right\"\r\n        />\r\n</template>\r\n<script>\r\nexport default {\r\n    \r\n    data() {\r\n      return {\r\n          show: false,\r\n          date: null,\r\n      };\r\n    },\r\n    methods:{\r\n        formatDate = (date) => {\r\n           return `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`;\r\n        },\r\n        onConfirm = (value) => {\r\n           show.value = false;\r\n           date.value = formatDate(value);\r\n        }\r\n    }\r\n    \r\n}\r\n</script>\r\n"],"mappings":";;;uBAAAA,mBAAA,CAAAC,SAAA,S,0BACIC,mBAAA,CAAe,aAAV,MAAI,sBACVC,mBAAA,uIACsD,EACtDC,YAAA,CAOOC,oBAAA;IANAC,IAAI,EAAC,UAAU;IACfC,KAA+B,EAA/B;MAAA;MAAA;IAAA,CAA+B;IAC/BC,KAAK,EAAC,IAAI;IAPpBC,UAAA,EAQmBC,IAAA,CAAAC,GAAG;IARtB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQmBH,IAAA,CAAAC,GAAG,GAAAE,MAAA;IACZC,WAAW,EAAC,KAAK;IACjB,aAAW,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}